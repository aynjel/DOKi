image: node:12.19.0-alpine3.10
# image: coolnumber9/node-ionic-angular:nov2020-v1.0.2

options:
  max-time: 15
  # docker: true
  size: 2x

definitions:
  caches:
    npm: $HOME/.npm
    cypress: $HOME/.cache/Cypress
  services:
    docker:
      memory: 4096
  # Job definition for running E2E tests in parallel
  e2e: &e2e
    name: E2E Parallel Tests
    caches:
      - npm
      - cypress
      - node # pre-defined cache
    image: cypress/base:10
    script:
      - npm install -g @angular/cli
      - npm install -g @ionic/cli
      - npm install -g wait-on
      - npm install
      - ng run app:serve --host=localhost --port=8100 & wait-on http://localhost:8100
      - npx cypress run --record --key $DPP_CYPRESS_RECORD_KEY --spec "cypress/integration/e2e/0-start-test-spec.js"
      - npx cypress run --record --key $DPP_CYPRESS_RECORD_KEY --parallel --spec "cypress/integration/e2e/1-login-page.spec.js, cypress/integration/e2e/2-data-privacy.spec.js, cypress/integration/e2e/3-onboarding-pages.spec.js, cypress/integration/e2e/4-dashboard-page.spec.js, cypress/integration/e2e/5-navigate-menu.spec.js, cypress/integration/e2e/6-in-patients-page.spec.js, cypress/integration/e2e/7-logout-page.spec.js, cypress/integration/e2e/8-change-password-spec.js" 
      - npx cypress run --record --key $DPP_CYPRESS_RECORD_KEY --spec "cypress/integration/e2e/9-end-test-spec.js"
    artifacts:
      - cypress/screenshots/**
      - cypress/reports/**
      - cypress/videos/**
  steps:
    - step: &code-linting
        name: Code Linting
        script:
          - echo "Code linting to be added soon..."
    - step: &code-linting-eslint
        name: Code Linting
        script:
          - npm install eslint
          - npx eslint .
          - npx eslint --format=checkstyle -o checkstyle-result.xml *.js
        after-script:
          - pipe: atlassian/checkstyle-report:0.2.0
        caches:
          - node # pre-defined cache
    - step: &build-artifacts
        name: Build PWA Artifacts
        image: cypress/base:10 # Because of Cypress dev dependency.
        script:
          - npm install -g @angular/cli
          - npm install -g @ionic/cli
          - npm ci
          - ionic build --prod
        artifacts:
          # - node_modules/** # Save modules for next steps
          - www/**
    # --------- Firebase Cloud Deployment ---------
    - step: &deploy-staging-to-firebase
        name: Deploy Staging (Firebase)
        deployment: staging
        script:
          - pipe: atlassian/firebase-deploy:0.6.0
            variables:
              FIREBASE_TOKEN: $DPP_STAGING_FIREBASE_TOKEN
    # --------- SFTP On-Premise Deployment ---------
    - step: &deploy-staging-using-sftp
        name: Deploy Staging (SFTP)
        deployment: staging
        script:
          - pipe: atlassian/sftp-deploy:0.5.6
            variables:
              USER: $DPP_USER
              SERVER: $DPP_SERVER
              REMOTE_PATH: $DPP_REMOTE_PATH_STAGING
              LOCAL_PATH: $DPP_LOCAL_PATH
              PASSWORD: $DPP_PASSWORD
              # DELETE_FLAG: 'false' # Don't delete existing files
              # EXTRA_ARGS: "--exclude=.bitbucket/ --exclude=.git/ --exclude=bitbucket-pipelines.yml --exclude=.gitignore" # Ignore these
    - step: &deploy-prod-using-sftp
        name: Deploy Prod (SFTP)
        deployment: production
        script:
          - pipe: atlassian/sftp-deploy:0.5.6
            variables:
              USER: $DPP_USER
              SERVER: $DPP_SERVER
              REMOTE_PATH: $DPP_REMOTE_PATH_PROD
              LOCAL_PATH: $DPP_LOCAL_PATH
              PASSWORD: $DPP_PASSWORD
              # DELETE_FLAG: 'false' # Don't delete existing files
              # EXTRA_ARGS: "--exclude=.bitbucket/ --exclude=.git/ --exclude=bitbucket-pipelines.yml --exclude=.gitignore" # Ignore these
    # --------- SCP On-Premise Deployment ---------
    - step: &deploy-staging-using-scp
        name: Deploy Staging (SCP)
        deployment: staging
        script:
          - pipe: atlassian/scp-deploy:0.3.13
            variables:
              USER: $DPP_USER
              SERVER: $DPP_SERVER
              REMOTE_PATH: $DPP_REMOTE_PATH_STAGING
              LOCAL_PATH: $DPP_LOCAL_PATH
    - step: &deploy-prod-using-scp
        name: Deploy Prod (SCP)
        deployment: production
        script:
          - pipe: atlassian/scp-deploy:0.3.13
            variables:
              USER: $DPP_USER
              SERVER: $DPP_SERVER
              REMOTE_PATH: $DPP_REMOTE_PATH_PROD
              LOCAL_PATH: $DPP_LOCAL_PATH
    - step: &run-pwa-on-docker-compose
        name: Run Tests using Docker Compose
        # image: coolnumber9/node-ionic-angular:nov2020-v1.0.2
        services:
          - docker
        caches:
          - docker # pre-defined cache
        size: 2x
        script:
          - docker-compose -f docker-compose-cypress.yml build
          - docker-compose -f docker-compose-cypress.yml up --exit-code-from cypress

pipelines:
  branches:
    '{dev_branch,develop}':
      - step: *code-linting
      - step:
          name: Install, Run, and Test
          script:
            - echo "Parallel Tests about to start..."
      - parallel:
          # Run Cypress Tests in parallel (6 machines)
          - step:
              <<: *e2e
              name: Cypress on Machine (1)
          - step:
              <<: *e2e
              name: Cypress on Machine (2)
          - step:
              <<: *e2e
              name: Cypress on Machine (3)
          - step:
              <<: *e2e
              name: Cypress on Machine (4)
          - step:
              <<: *e2e
              name: Cypress on Machine (5)
          - step:
              <<: *e2e
              name: Cypress on Machine (6)
      - step: *build-artifacts
      - step: *deploy-staging-to-firebase

    master:
      - step: *code-linting
      - step:
        name: Install, Run, and Test
        script:
          - echo "Parallel Tests about to start..."
      - parallel:
          # Run Cypress Tests in parallel (6 machines)
          - step:
              <<: *e2e
              name: Cypress on Machine (1)
          - step:
              <<: *e2e
              name: Cypress on Machine (2)
          - step:
              <<: *e2e
              name: Cypress on Machine (3)
          - step:
              <<: *e2e
              name: Cypress on Machine (4)
          - step:
              <<: *e2e
              name: Cypress on Machine (5)
          - step:
              <<: *e2e
              name: Cypress on Machine (6)
      - step: *build-artifacts
      - step: *deploy-prod-using-sftp
